version: '3.8'

services:
  db:
    image: postgres:13
    environment:
      OSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  process_data:
    build:
      context: .
      dockerfile: process_data/Dockerfile
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PYTHONPATH: /app
    volumes:
      - ./data:/data
      - .:/app
    command: ["python", "process_data.py"]

  train_model:
    build:
      context: .
      dockerfile: train_model/Dockerfile
    depends_on:
      - db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PYTHONPATH: /app
    volumes:
      - ./data:/data
      - .:/app
    command: ["python", "train_model.py"]

  prediction_api:
    build:
      context: .
      dockerfile: prediction_api/Dockerfile
    depends_on:
      - db
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      PYTHONPATH: /app
    volumes:
      - ./data:/data
      - .:/app
    command: ["python", "app.py"]

volumes:
  pg_data:
